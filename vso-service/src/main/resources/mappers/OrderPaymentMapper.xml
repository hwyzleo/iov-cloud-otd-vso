<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.hwyz.iov.cloud.otd.vso.service.infrastructure.repository.dao.OrderPaymentDao">

    <!-- 通用查询映射结果 -->
    <resultMap id="baseResultMap" type="net.hwyz.iov.cloud.otd.vso.service.infrastructure.repository.po.OrderPaymentPo">
        <id column="id" property="id" />
        <result column="description" property="description" />
        <result column="create_time" property="createTime" />
        <result column="create_by" property="createBy" />
        <result column="modify_time" property="modifyTime" />
        <result column="modify_by" property="modifyBy" />
        <result column="row_version" property="rowVersion" />
        <result column="row_valid" property="rowValid" />
        <result column="order_num" property="orderNum" />
        <result column="order_payment_phase" property="orderPaymentPhase" />
        <result column="payment_merchant" property="paymentMerchant" />
        <result column="payment_order" property="paymentOrder" />
        <result column="payment_reference" property="paymentReference" />
        <result column="payment_amount" property="paymentAmount" />
        <result column="payment_channel" property="paymentChannel" />
        <result column="payment_data_type" property="paymentDataType" />
        <result column="state" property="state" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="baseColumnList">
        id, order_num, order_payment_phase, payment_merchant, payment_order, payment_reference, payment_amount, payment_channel, payment_data_type, state, 
        description, create_time, create_by, modify_time, modify_by, row_version, row_valid
    </sql>

    <!-- 插入 -->
    <insert id="insertPo" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tb_order_payment (
            id, order_num, order_payment_phase, payment_merchant, payment_order, payment_reference, payment_amount, payment_channel, payment_data_type, state, 
            description, create_time, create_by, modify_time, modify_by, row_version, row_valid
        )
        VALUES (
            #{id}, #{orderNum}, #{orderPaymentPhase}, #{paymentMerchant}, #{paymentOrder}, #{paymentReference}, #{paymentAmount}, #{paymentChannel}, #{paymentDataType}, #{state}, 
            #{description}, now(), #{createBy}, now(), #{modifyBy}, 1, 1
        )
    </insert>

    <!-- 批量插入 -->
    <insert id="batchInsertPo" useGeneratedKeys="true" keyProperty="id" parameterType="java.util.List">
        INSERT INTO tb_order_payment (
            id, order_num, order_payment_phase, payment_merchant, payment_order, payment_reference, payment_amount, payment_channel, payment_data_type, state, 
            description, create_time, create_by, modify_time, modify_by, row_version, row_valid
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
        (
            #{item.id}, #{item.orderNum}, #{item.orderPaymentPhase}, #{item.paymentMerchant}, #{item.paymentOrder}, #{item.paymentReference}, #{item.paymentAmount}, #{item.paymentChannel}, #{item.paymentDataType}, #{item.state}, 
            #{item.description}, now(), #{item.createBy}, now(), #{item.modifyBy}, 1, 1
        )
        </foreach>
    </insert>

    <!-- 更新 -->
    <update id="updatePo" parameterType="net.hwyz.iov.cloud.otd.vso.service.infrastructure.repository.po.OrderPaymentPo">
        UPDATE tb_order_payment t SET
        <if test="orderNum != null and orderNum != ''">
            t.order_num = #{orderNum},
        </if>
        <if test="orderPaymentPhase != null">
            t.order_payment_phase = #{orderPaymentPhase},
        </if>
        <if test="paymentMerchant != null and paymentMerchant != ''">
            t.payment_merchant = #{paymentMerchant},
        </if>
        <if test="paymentOrder != null and paymentOrder != ''">
            t.payment_order = #{paymentOrder},
        </if>
        <if test="paymentReference != null and paymentReference != ''">
            t.payment_reference = #{paymentReference},
        </if>
        <if test="paymentAmount != null">
            t.payment_amount = #{paymentAmount},
        </if>
        <if test="paymentChannel != null and paymentChannel != ''">
            t.payment_channel = #{paymentChannel},
        </if>
        <if test="paymentDataType != null">
            t.payment_data_type = #{paymentDataType},
        </if>
        <if test="state != null">
            t.state = #{state},
        </if>
        <if test="description != null and description != ''">
            t.description = #{description},
        </if>
        <if test="modifyBy != null">
            t.modify_by = #{modifyBy},
        </if>
        t.row_version = t.row_version + 1,
        t.modify_time = now()
        WHERE id = #{id}
    </update>

    <!-- 逻辑删除 -->
    <update id="logicalDeletePo" parameterType="Long">
        UPDATE tb_order_payment t SET
        t.row_version = t.row_version + 1,
        t.modify_time = now(),
        t.row_valid = 0
        WHERE t.id = #{value}
    </update>

    <!-- 物理删除 -->
    <delete id="physicalDeletePo" parameterType="Long">
        DELETE FROM tb_order_payment t
        WHERE t.id = #{value}
    </delete>

    <!-- 根据主键获取对应数据 -->
    <select id="selectPoById" parameterType="Long" resultMap="baseResultMap">
        SELECT <include refid="baseColumnList"/>
        FROM tb_order_payment t
        WHERE t.id = #{value}
        AND t.row_valid = 1
    </select>

    <!-- 根据数据对象获取对应数据列表 -->
    <select id="selectPoByExample" parameterType="net.hwyz.iov.cloud.otd.vso.service.infrastructure.repository.po.OrderPaymentPo" resultMap="baseResultMap">
        SELECT <include refid="baseColumnList"/>
        FROM tb_order_payment t
        WHERE t.row_valid = 1
        <if test="id != null">
            AND t.id = #{id}
        </if>
        <if test="orderNum != null and orderNum != ''">
            AND t.order_num = #{orderNum}
        </if>
        <if test="orderPaymentPhase != null">
            AND t.order_payment_phase = #{orderPaymentPhase}
        </if>
        <if test="paymentMerchant != null and paymentMerchant != ''">
            AND t.payment_merchant = #{paymentMerchant}
        </if>
        <if test="paymentOrder != null and paymentOrder != ''">
            AND t.payment_order = #{paymentOrder}
        </if>
        <if test="paymentReference != null and paymentReference != ''">
            AND t.payment_reference = #{paymentReference}
        </if>
        <if test="paymentAmount != null">
            AND t.payment_amount = #{paymentAmount}
        </if>
        <if test="paymentChannel != null and paymentChannel != ''">
            AND t.payment_channel = #{paymentChannel}
        </if>
        <if test="paymentDataType != null">
            AND t.payment_data_type = #{paymentDataType}
        </if>
        <if test="state != null">
            AND t.state = #{state}
        </if>
        <if test="description != null and description != ''">
            AND t.description = #{description}
        </if>
        <if test="createTime != null">
            AND t.create_time = #{createTime}
        </if>
        <if test="createBy != null">
            AND t.create_by = #{createBy}
        </if>
        <if test="modifyTime != null">
            AND t.modify_time = #{modifyTime}
        </if>
        <if test="modifyBy != null">
            AND t.modify_by = #{modifyBy}
        </if>
        <if test="rowVersion != null">
            AND t.row_version = #{rowVersion}
        </if>
        ORDER BY t.id DESC
    </select>

    <!-- 根据Map对象获取对应数据列表 -->
    <select id="selectPoByMap" parameterType="java.util.Map" resultMap="baseResultMap">
        SELECT <include refid="baseColumnList"/>
        FROM tb_order_payment t
        WHERE t.row_valid = 1
        <!-- 添加自定义条件 -->
        ORDER BY t.id DESC
    </select>

    <!-- 根据Map对象统计记录数 -->
    <select id="countPoByMap" parameterType="java.util.Map" resultType="int">
        SELECT COUNT(*)
        FROM tb_order_payment t
        WHERE t.row_valid = 1
        <!-- 添加自定义条件 -->
    </select>
</mapper>
